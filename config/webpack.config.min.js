"use strict";const fs=require("fs"),path=require("path"),webpack=require("webpack"),resolve=require("resolve"),PnpWebpackPlugin=require("pnp-webpack-plugin"),HtmlWebpackPlugin=require("html-webpack-plugin"),CaseSensitivePathsPlugin=require("case-sensitive-paths-webpack-plugin"),InlineChunkHtmlPlugin=require("react-dev-utils/InlineChunkHtmlPlugin"),TerserPlugin=require("terser-webpack-plugin"),MiniCssExtractPlugin=require("mini-css-extract-plugin"),OptimizeCSSAssetsPlugin=require("optimize-css-assets-webpack-plugin"),safePostCssParser=require("postcss-safe-parser"),ManifestPlugin=require("webpack-manifest-plugin"),InterpolateHtmlPlugin=require("react-dev-utils/InterpolateHtmlPlugin"),WorkboxWebpackPlugin=require("workbox-webpack-plugin"),WatchMissingNodeModulesPlugin=require("react-dev-utils/WatchMissingNodeModulesPlugin"),ModuleScopePlugin=require("react-dev-utils/ModuleScopePlugin"),getCSSModuleLocalIdent=require("react-dev-utils/getCSSModuleLocalIdent"),paths=require("./paths"),modules=require("./modules"),getClientEnvironment=require("./env"),ModuleNotFoundPlugin=require("react-dev-utils/ModuleNotFoundPlugin"),ForkTsCheckerWebpackPlugin=require("react-dev-utils/ForkTsCheckerWebpackPlugin"),typescriptFormatter=require("react-dev-utils/typescriptFormatter"),postcssNormalize=require("postcss-normalize"),appPackageJson=require(paths.appPackageJson),shouldUseSourceMap="false"!==process.env.GENERATE_SOURCEMAP,shouldInlineRuntimeChunk="false"!==process.env.INLINE_RUNTIME_CHUNK,isExtendingEslintConfig="true"===process.env.EXTEND_ESLINT,imageInlineSizeLimit=parseInt(process.env.IMAGE_INLINE_SIZE_LIMIT||"10000"),useTypeScript=fs.existsSync(paths.appTsConfig),cssRegex=/\.css$/,cssModuleRegex=/\.module\.css$/,sassRegex=/\.(scss|sass)$/,sassModuleRegex=/\.module\.(scss|sass)$/,CKEditorWebpackPlugin=require("@ckeditor/ckeditor5-dev-webpack-plugin"),{styles:styles}=require("@ckeditor/ckeditor5-dev-utils");module.exports=function(webpackEnv){const isEnvDevelopment="development"===webpackEnv,isEnvProduction="production"===webpackEnv,isEnvProductionProfile=isEnvProduction&&process.argv.includes("--profile"),env=getClientEnvironment(paths.publicUrlOrPath.slice(0,-1)),getStyleLoaders=(cssOptions,preProcessor)=>{const loaders=[isEnvDevelopment&&require.resolve("style-loader"),isEnvProduction&&{loader:MiniCssExtractPlugin.loader,options:paths.publicUrlOrPath.startsWith(".")?{publicPath:"../../"}:{}},{loader:require.resolve("css-loader"),options:cssOptions},{loader:require.resolve("postcss-loader"),options:{ident:"postcss",plugins:()=>[require("postcss-flexbugs-fixes"),require("postcss-preset-env")({autoprefixer:{flexbox:"no-2009"},stage:3}),postcssNormalize()],sourceMap:isEnvProduction&&shouldUseSourceMap}}].filter(Boolean);return preProcessor&&loaders.push({loader:require.resolve("resolve-url-loader"),options:{sourceMap:isEnvProduction&&shouldUseSourceMap}},{loader:require.resolve(preProcessor),options:{sourceMap:!0}}),loaders};return{mode:isEnvProduction?"production":isEnvDevelopment&&"development",bail:isEnvProduction,devtool:isEnvProduction?!!shouldUseSourceMap&&"source-map":isEnvDevelopment&&"cheap-module-source-map",entry:[isEnvDevelopment&&require.resolve("react-dev-utils/webpackHotDevClient"),paths.appIndexJs].filter(Boolean),output:{path:isEnvProduction?paths.appBuild:void 0,pathinfo:isEnvDevelopment,filename:isEnvProduction?"../static/js/[name].[contenthash:8].js":isEnvDevelopment&&"../static/js/bundle.js",futureEmitAssets:!0,chunkFilename:isEnvProduction?"../static/js/[name].[contenthash:8].chunk.js":isEnvDevelopment&&"../static/js/[name].chunk.js",publicPath:paths.publicUrlOrPath,devtoolModuleFilenameTemplate:isEnvProduction?info=>path.relative(paths.appSrc,info.absoluteResourcePath).replace(/\\/g,"/"):isEnvDevelopment&&(info=>path.resolve(info.absoluteResourcePath).replace(/\\/g,"/")),jsonpFunction:`webpackJsonp${appPackageJson.name}`,globalObject:"this"},optimization:{minimize:isEnvProduction,minimizer:[new TerserPlugin({terserOptions:{parse:{ecma:8},compress:{ecma:5,warnings:!1,comparisons:!1,inline:2},mangle:{safari10:!0},keep_classnames:isEnvProductionProfile,keep_fnames:isEnvProductionProfile,output:{ecma:5,comments:!1,ascii_only:!0}},sourceMap:shouldUseSourceMap}),new OptimizeCSSAssetsPlugin({cssProcessorOptions:{parser:safePostCssParser,map:!!shouldUseSourceMap&&{inline:!1,annotation:!0}},cssProcessorPluginOptions:{preset:["default",{minifyFontValues:{removeQuotes:!1}}]}})],splitChunks:{chunks:"all",name:!1},runtimeChunk:{name:entrypoint=>`runtime-${entrypoint.name}`}},resolve:{modules:["node_modules",paths.appNodeModules].concat(modules.additionalModulePaths||[]),extensions:paths.moduleFileExtensions.map(ext=>`.${ext}`).filter(ext=>useTypeScript||!ext.includes("ts")),alias:{"react-native":"react-native-web",...isEnvProductionProfile&&{"react-dom$":"react-dom/profiling","scheduler/tracing":"scheduler/tracing-profiling"},...modules.webpackAliases||{}},plugins:[PnpWebpackPlugin,new ModuleScopePlugin(paths.appSrc,[paths.appPackageJson])]},resolveLoader:{plugins:[PnpWebpackPlugin.moduleLoader(module)]},module:{strictExportPresence:!0,rules:[{parser:{requireEnsure:!1}},{test:/\.(js|mjs|jsx|ts|tsx)$/,enforce:"pre",use:[{options:{cache:!0,formatter:require.resolve("react-dev-utils/eslintFormatter"),eslintPath:require.resolve("eslint"),resolvePluginsRelativeTo:__dirname},loader:require.resolve("eslint-loader")}],include:paths.appSrc},{oneOf:[{test:[/\.bmp$/,/\.gif$/,/\.jpe?g$/,/\.png$/],loader:require.resolve("url-loader"),options:{limit:imageInlineSizeLimit,name:"static/media/[name].[hash:8].[ext]"}},{test:/\.(js|mjs|jsx|ts|tsx)$/,include:paths.appSrc,loader:require.resolve("babel-loader"),options:{customize:require.resolve("babel-preset-react-app/webpack-overrides"),plugins:[[require.resolve("babel-plugin-named-asset-import"),{loaderMap:{svg:{ReactComponent:"@svgr/webpack?-svgo,+titleProp,+ref![path]"}}}]],cacheDirectory:!0,cacheCompression:!1,compact:isEnvProduction}},{test:/\.(js|mjs)$/,exclude:/@babel(?:\/|\\{1,2})runtime/,loader:require.resolve("babel-loader"),options:{babelrc:!1,configFile:!1,compact:!1,presets:[[require.resolve("babel-preset-react-app/dependencies"),{helpers:!0}]],cacheDirectory:!0,cacheCompression:!1,sourceMaps:shouldUseSourceMap,inputSourceMap:shouldUseSourceMap}},{test:cssRegex,exclude:cssModuleRegex,use:getStyleLoaders({importLoaders:1,sourceMap:isEnvProduction&&shouldUseSourceMap}),sideEffects:!0},{test:cssModuleRegex,use:getStyleLoaders({importLoaders:1,sourceMap:isEnvProduction&&shouldUseSourceMap,modules:{getLocalIdent:getCSSModuleLocalIdent}})},{test:sassRegex,exclude:sassModuleRegex,use:getStyleLoaders({importLoaders:3,sourceMap:isEnvProduction&&shouldUseSourceMap},"sass-loader"),sideEffects:!0},{test:sassModuleRegex,use:getStyleLoaders({importLoaders:3,sourceMap:isEnvProduction&&shouldUseSourceMap,modules:{getLocalIdent:getCSSModuleLocalIdent}},"sass-loader")},{loader:require.resolve("file-loader"),exclude:[/\.(js|mjs|jsx|ts|tsx)$/,/\.html$/,/\.json$/],options:{name:"static/media/[name].[hash:8].[ext]"}}]},{test:/ckeditor5-[^/\\]+[/\\]theme[/\\]icons[/\\][^/\\]+\.svg$/,use:["raw-loader"]},{test:/ckeditor5-[^/\\]+[/\\]theme[/\\].+\.css$/,use:[{loader:"style-loader",options:{injectType:"singletonStyleTag",attributes:{"data-cke":!0}}},{loader:"postcss-loader",options:styles.getPostCssConfig({themeImporter:{themePath:require.resolve("@ckeditor/ckeditor5-theme-lark")},minify:!0})}]}]},plugins:[new HtmlWebpackPlugin(Object.assign({},{inject:!0,template:paths.appHtml},isEnvProduction?{minify:{removeComments:!0,collapseWhitespace:!0,removeRedundantAttributes:!0,useShortDoctype:!0,removeEmptyAttributes:!0,removeStyleLinkTypeAttributes:!0,keepClosingSlash:!0,minifyJS:!0,minifyCSS:!0,minifyURLs:!0}}:void 0)),isEnvProduction&&shouldInlineRuntimeChunk&&new InlineChunkHtmlPlugin(HtmlWebpackPlugin,[/runtime-.+[.]js/]),new InterpolateHtmlPlugin(HtmlWebpackPlugin,env.raw),new ModuleNotFoundPlugin(paths.appPath),new webpack.DefinePlugin(env.stringified),isEnvDevelopment&&new webpack.HotModuleReplacementPlugin,isEnvDevelopment&&new CaseSensitivePathsPlugin,isEnvDevelopment&&new WatchMissingNodeModulesPlugin(paths.appNodeModules),isEnvProduction&&new MiniCssExtractPlugin({filename:"static/css/[name].[contenthash:8].css",chunkFilename:"static/css/[name].[contenthash:8].chunk.css"}),new ManifestPlugin({fileName:"asset-manifest.json",publicPath:paths.publicUrlOrPath,generate:(seed,files,entrypoints)=>{const manifestFiles=files.reduce((manifest,file)=>(manifest[file.name]=file.path,manifest),seed),entrypointFiles=entrypoints.main.filter(fileName=>!fileName.endsWith(".map"));return{files:manifestFiles,entrypoints:entrypointFiles}}}),new webpack.IgnorePlugin(/^\.\/locale$/,/moment$/),isEnvProduction&&new WorkboxWebpackPlugin.GenerateSW({clientsClaim:!0,exclude:[/\.map$/,/asset-manifest\.json$/],importWorkboxFrom:"cdn",navigateFallback:paths.publicUrlOrPath+"index.html",navigateFallbackBlacklist:[new RegExp("^/_"),new RegExp("/[^/?]+\\.[^/]+$")]}),useTypeScript&&new ForkTsCheckerWebpackPlugin({typescript:resolve.sync("typescript",{basedir:paths.appNodeModules}),async:isEnvDevelopment,useTypescriptIncrementalApi:!0,checkSyntacticErrors:!0,resolveModuleNameModule:process.versions.pnp?`${__dirname}/pnpTs.js`:void 0,resolveTypeReferenceDirectiveModule:process.versions.pnp?`${__dirname}/pnpTs.js`:void 0,tsconfig:paths.appTsConfig,reportFiles:["**","!**/__tests__/**","!**/?(*.)(spec|test).*","!**/src/setupProxy.*","!**/src/setupTests.*"],silent:!0,formatter:isEnvProduction?typescriptFormatter:void 0}),new CKEditorWebpackPlugin({language:"kr"})].filter(Boolean),node:{module:"empty",dgram:"empty",dns:"mock",fs:"empty",http2:"empty",net:"empty",tls:"empty",child_process:"empty"},performance:!1}};